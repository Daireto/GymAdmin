@model GymAdmin.Data.Entities.EventInscription

@{
    ViewData["Title"] = "Details";
}

<!-- GymAdmin style -->
<link rel="stylesheet" type="text/css" href="~/css/forms.css" />
<link rel="stylesheet" type="text/css" href="~/css/Account/Register.css" />
<link rel="stylesheet" type="text/css" href="~/css/Account/EditUser.css" />
<link rel="stylesheet" type="text/css" href="~/css/Account/ViewUser.css" />
<link rel="stylesheet" type="text/css" href="~/css/tables.css" />
<link rel="stylesheet" type="text/css" href="~/css/User/Users.css" />

<style>
    .fa-ban,
    .fa-circle-check {
        padding-right: 5px;
    }

    .GymAdminEditButton {
        border-color: #FFC107;
    }

        .GymAdminEditButton:hover {
            color: black;
        }

        .GymAdminEditButton a {
            color: #FFC107;
        }

            .GymAdminEditButton a:hover {
                color: black;
            }

    .GymAdminDeleteButton {
        border-color: #DC3545;
        color: #DC3545;
        padding: 10px 20px;
        margin-top: -2px !important;
    }

        .GymAdminDeleteButton:hover {
            background-color: #DC3545;
            color: black;
        }

    #MyTable th, .td_option {
        text-align: center;
    }

    td {
        color: white;
    }
</style>

<flash dismissable="true" />

<!-- View inscription page -->
<div id="GymAdminPrincipalContainer">
    <div class="row" id="GymAdminRegisterFormElementsContainer">
        <div class="col-md-12" id="GymAdminFieldsContainer">
            <form asp-action="" id="GymAdminForm">
                <div class="row">
                    <div class="col-md-12">
                        <!-- Field -->
                        <div class="form-group GymAdminFormElement">
                            <h2 style="text-align:center;">Inscripción a @Model.Event.Name</h2>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <!-- Left column -->
                    <div class="col-md-6 GymAdminFormColumn">
                        @{
                            var Status = "";
                            if (Model.EventStatus == GymAdmin.Enums.EventStatus.SignedUp)
                            {
                                Status = "Inscripción de";
                            }
                            if (Model.EventStatus == GymAdmin.Enums.EventStatus.Cancelled)
                            {
                                Status = "Cancelado por";
                            }
                        }
                        <!-- Field -->
                        <div class="form-group GymAdminFormElement">
                            <label class="control-label GymAdminFormLabel">@Status</label>
                            <input value="@Model.User.FullName" class="GymAdminFormInput" autocomplete="off" readonly />
                        </div>
                        <!-- Field -->
                        <div class="form-group GymAdminFormElement">
                            <label class="control-label GymAdminFormLabel">Director del evento</label>
                            <input value="@Model.Event.Director.User.FullName" class="GymAdminFormInput" autocomplete="off" readonly />
                        </div>
                        <!-- Field -->
                        @{
                            var date = "";
                            var day = "";
                            if (Model.Event.Day.ToString() == "Monday")
                            {
                                day = "Lunes";
                            }
                            if (Model.Event.Day.ToString() == "Tuesday")
                            {
                                day = "Martes";
                            }
                            if (Model.Event.Day.ToString() == "Wednesday")
                            {
                                day = "Miércoles";
                            }
                            if (Model.Event.Day.ToString() == "Thursday")
                            {
                                day = "Jueves";
                            }
                            if (Model.Event.Day.ToString() == "Friday")
                            {
                                day = "Viernes";
                            }
                            if (Model.Event.Day.ToString() == "Saturday")
                            {
                                day = "Sábado";
                            }
                            if (Model.Event.Day.ToString() == "Sunday")
                            {
                                day = "Domingo";
                            }
                            var StartHourDateTime = new DateTime(Model.Event.StartHour.Ticks);
                            var FinishHourDateTime = new DateTime(Model.Event.FinishHour.Ticks);
                            var StartHour12HoursFormated = StartHourDateTime.ToString("h:mm tt");
                            var FinishHour12HoursFormated = FinishHourDateTime.ToString("h:mm tt");
                            date = $"{day} de {StartHour12HoursFormated} a {FinishHour12HoursFormated}";
                        }
                        <div class="form-group GymAdminFormElement">
                            <label class="control-label GymAdminFormLabel">Horario del evento</label>
                            <input value="@date" class="GymAdminFormInput" autocomplete="off" readonly />
                        </div>
                    </div>
                    <!-- Right column -->
                    <div class="col-md-6 GymAdminFormColumn">
                        <!-- Field -->
                        <div class="form-group GymAdminFormElement">
                            <label class="control-label GymAdminFormLabel">Email del usuario</label>
                            <input value="@Model.User.Email" class="GymAdminFormInput" autocomplete="off" readonly />
                        </div>
                        <!-- Field -->
                        <div class="form-group GymAdminFormElement">
                            <label class="control-label GymAdminFormLabel">Documento del usuario</label>
                            <input value="@Model.User.Document" class="GymAdminFormInput" autocomplete="off" readonly />
                        </div>
                        <!-- Field -->
                        @{
                            var iday = Model.InscriptionDate.ToString(@"dd/MM/yyyy");
                        }
                        <div class="form-group GymAdminFormElement">
                            <label class="control-label GymAdminFormLabel">Fecha de inscripción</label>
                            <input value="@iday" class="GymAdminFormInput" autocomplete="off" readonly />
                        </div>
                    </div>
                </div>
                <!-- Buttons and links -->
                <div class="GymAdminRegisterFormButtons form-group mt-2">
                    @if (Model.EventStatus == GymAdmin.Enums.EventStatus.SignedUp)
                    {
                        <button onclick="    return false;" data-id="@Model.Id" class="btn btn-outline-danger deleteItem GymAdminFormButton GymAdminDeleteButton" data-bs-toggle="modal" data-bs-target="#deleteDialog"><i class="fa-solid fa-ban"></i>Marcar como cancelado</button>
                    }
                    <button disabled class="GymAdminFormButton">
                        <a asp-action="ShowEventInscriptions" class="GymAdminFormElement GymAdminFormLabel GymAdminRegisterFormButton">Regresar</a>
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<partial name="_CancelEventDialog" />

<!-- Scripts -->
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        sc_deleteDialog.openModal('deleteItem', true, 'btnYesDelete', '/Events/CancelInscription/', false);
    </script>
}
