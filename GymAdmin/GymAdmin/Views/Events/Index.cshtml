@model GymAdmin.Models.EventsViewModel

@{
    ViewData["Title"] = "Events";
}

<!-- GymAdmin style -->
<link rel="stylesheet" type="text/css" href="~/css/tables.css" />
<link rel="stylesheet" type="text/css" href="~/css/User/Users.css" />

<!-- Filtering buttons -->
<a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">Ordenar por Nombre</a>
<a asp-action="Index" asp-route-sortOrder="@ViewData["DaySortParm"]">Ordenar por Día</a>

<!-- Searching form -->
<form asp-action="Index" method="get">
<input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
<input type="submit" value="Buscar" />
</form>

<!-- Pagination buttons -->
@{
var prevDisabled = !Model.Events.HasPreviousPage ? "disabled" : "";
var nextDisabled = !Model.Events.HasNextPage ? "disabled" : "";
}
<a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.Events.PageIndex - 1)" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-warning @prevDisabled">Anterior</a>
<a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]" asp-route-pageNumber="@(Model.Events.PageIndex + 1)" asp-route-currentFilter="@ViewData["CurrentFilter"]" class="btn btn-warning @nextDisabled">Siguiente</a>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    }
